---
name: Cluster Upgrade tests

on:
  workflow_dispatch:
    inputs:
      eksupgrade_version:
        required: true
        description: Select the eksupgrade version you want to use
        default: 'latest'
      trigger_tests:
        type: choice
        required: true
        options: ['true', 'false']
        description: Select if you want to trigger cluster creation and tests
      trigger_destroy:
        type: choice
        options: ['true', 'false']
        default: 'false'
        description: Destroy active test clusters ?


concurrency: upgrade-test

jobs:
  create-cluster:
    if: ${{inputs.trigger_tests == 'true'}}
    name: Cluster creation
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - eks_version: 1.22
            upgrade_version: 1.23
          - eks_version: 1.23
            upgrade_version: 1.24
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-session-name: GithubActions-Session
      - name: setup eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version
      - name: create eks cluster
        id: create_cluster
        run: |
          echo "Creating the cluster eksup-cluster-${${{matrix.eks_version}}/./-}"
          eksctl create cluster -f .github/scripts/cluster_creation_${{matrix.eks_version}}.yaml


  cluster-upgrade-checks:
    name: Cluster Upgrade checks
    if: ${{inputs.trigger_tests == 'true'}}
    runs-on: ubuntu-latest
    needs: create-cluster
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - eks_version: 1.22
            upgrade_version: 1.23
          - eks_version: 1.23
            upgrade_version: 1.24
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: install latest utility version
        id: install_deps_latest
        if: ${{inputs.eksupgrade_version == 'latest' }}
        run: |
          python3 -m pip install eksupgrade
      - name: install utility version from a ref
        id: install_deps_from_ref
        if: ${{inputs.eksupgrade_version != 'latest' }}
        run: |
          #python3 -m pip install git+ssh://git@github.com/aws-samples/eks-cluster-upgrade.git@${{inputs.eksupgrade_version}}
          exit 1 # TODO fix it with the relevant PR number or branch name
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-session-name: GithubActions-Session
      - name: Test no upgrade
        id: no_upgrade
        run: |
          echo "Test the cluster eksup-cluster-${${{matrix.eks_version}}/./-} with upgrade set to current version"
          eksupgrade eksup-cluster-${${{matrix.eks_version}}/./-} ${{matrix.eks_version}} us-east-1
      - name: Test pre-flight checks
        id: preflight_checks
        run: |
          echo "Running pre-flight checks on the cluster eksup-cluster-${${{matrix.eks_version}}/./-} against version ${{matrix.upgrade_version}} "
          eksupgrade eksup-cluster-${${{matrix.eks_version}}/./-} ${{matrix.upgrade_version}} us-east-1 --preflight
      - name: Test standalone addon upgrade
        id: addon_upgrade
        run: |
          echo "Running upgrade addon checks on the cluster eksup-cluster-${${{matrix.eks_version}}/./-} with same control plane version "
          # eksupgrade eksup-cluster-${${{matrix.eks_version}}/./-}${{matrix.eks_version}} us-east-1 --latest-addons
      - name: Test cluster upgrade
        id: cluster_upgrade
        run: |
          echo "Upgrading the cluster eksup-cluster-${${{matrix.eks_version}}/./-} to version ${{matrix.upgrade_version}} "
          # eksupgrade eksup-cluster-${${{matrix.eks_version}}/./-} ${{matrix.upgrade_version}} us-east-1
      - name: Destroy the cluster
        if: ${{inputs.trigger_destroy == 'true'}}
        id: destroy_cluster
        run: |
          echo "Destroying the temporary cluster eksup-cluster-${${{matrix.eks_version}}/./-}"
          eksctl delete cluster -f .github/scripts/cluster_creation_${{matrix.eks_version}}.yaml

  destroy-cluster:
    if: ${{inputs.trigger_destroy == 'true' && inputs.trigger_tests == 'false' }}
    name: Delete Active Clusters
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - eks_version: 1.22
            upgrade_version: 1.23
          - eks_version: 1.23
            upgrade_version: 1.24
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-session-name: GithubActions-Session
      - name: setup eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version
      - name: Destroy the cluster
        id: destroy_cluster
        run: |
          echo "Destroying the temporary cluster eksup-cluster-${{matrix.eks_version}}"
          eksctl delete cluster -f .github/scripts/cluster_creation_${{matrix.eks_version}}.yaml
          echo "post delete"
